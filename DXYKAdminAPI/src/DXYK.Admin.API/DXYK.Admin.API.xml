<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DXYK.Admin.API</name>
    </assembly>
    <members>
        <member name="T:DXYK.Admin.API.Controllers.LoginController">
            <summary>
             用户信息
            </summary>
        </member>
        <member name="F:DXYK.Admin.API.Controllers.LoginController._captchaCodeSessionNameFroLogin">
            <summary>
            验证码在内存中默认保存Key  登录时使用
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Controllers.LoginController._authorizeService">
            <summary>
             用户信息UserService
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Controllers.LoginController._uthorizeRepository">
            <summary>
             用户信息IUserRepository
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Controllers.LoginController.#ctor(DXYK.Admin.Service.AuthorizeService,DXYK.Admin.Repository.IAuthorizeRepository)">
            <summary>
             sys_userController
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Controllers.LoginController.LoginIn(DXYK.Admin.Dto.Sys.UserLoginDto)">
            <summary>
             用户名、密码登录、 验证码登录
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Controllers.LoginController.LoginInAsync(DXYK.Admin.Dto.Sys.UserLoginDto)">
            <summary>
             异步 用户名、密码登录、 验证码登录
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Controllers.LoginController.SignIn(DXYK.Admin.Dto.Sys.UserSingInDto)">
            <summary>
             用户名、密码登录
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Controllers.LoginController.GetWeChatCode">
            <summary>
            获取微信验证码
            </summary>
            <returns>二维码Guid</returns>
        </member>
        <member name="M:DXYK.Admin.API.Controllers.LoginController.GetCaptchaImage(System.String)">
            <summary>
            验证码图片
            </summary>
            <param name="key">保存在缓存中对应的key</param>
            <returns></returns>
        </member>
        <member name="M:DXYK.Admin.API.Controllers.LoginController.ValidateCaptchaCode(System.String,System.String)">
            <summary>
            验证码 验证
            </summary>
            <param name="userInputCaptcha">验证码内容</param>
            <param name="key">保存在缓存中对应的key</param>
            <returns></returns>
        </member>
        <member name="T:DXYK.Admin.API.Exceptions.APIException">
            <summary>
            APIException
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Exceptions.APIException.#ctor">
            <summary>
            APIException
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Exceptions.APIException.code">
            <summary>
            code
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Exceptions.APIException.#ctor(System.Int32)">
            <summary>
            APIException
            </summary>
            <param name="errorCode">错误代码</param>
        </member>
        <member name="M:DXYK.Admin.API.Exceptions.APIException.#ctor(System.Int32,System.String)">
            <summary>
            APIException
            </summary>
            <param name="errorCode">错误代码</param>
            <param name="message">消息</param>
        </member>
        <member name="M:DXYK.Admin.API.Exceptions.APIException.#ctor(System.Int32,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            APIException
            </summary>
            <param name="errorCode">错误代码</param>
            <param name="info">info</param>
            <param name="context">context</param>
        </member>
        <member name="M:DXYK.Admin.API.Exceptions.APIException.#ctor(System.Int32,System.String,System.Exception)">
            <summary>
            APIException
            </summary>
            <param name="errorCode">错误代码</param>
            <param name="message">消息</param>
            <param name="innerException">innerException</param>
        </member>
        <member name="T:DXYK.Admin.API.Filters.ApiAuthorize">
            <summary>
            Api鉴权
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Filters.ApiAuthorize.Modules">
            <summary>
            模块别名，可配置更改
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Filters.ApiAuthorize.Methods">
            <summary>
            权限动作
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Filters.ApiAuthorize.Sign">
            <summary>
            权限访问控制器参数
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Filters.ApiAuthorize.IsLog">
            <summary>
            是否保存日志
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Filters.ApiAuthorize.LogType">
            <summary>
            操作类型CRUD
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Filters.ApiAuthorize.ActionArguments">
            <summary>
            ActionArguments
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Filters.ApiAuthorize.Stopwatch">
            <summary>
            Stopwatch
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Filters.ApiAuthorize.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
             <summary>
            OnActionExecuting
             </summary>
             <param name="context"></param>
        </member>
        <member name="M:DXYK.Admin.API.Filters.ApiAuthorize.ContextReturn(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,System.String)">
            <summary>
            返回API的信息
            </summary>
            <param name="context"></param>
            <param name="mes"></param>
        </member>
        <member name="M:DXYK.Admin.API.Filters.ApiAuthorize.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            OnActionExecuted
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:DXYK.Admin.API.Filters.GlobalExceptionFilter">
            <summary>
            GlobalExceptionFilter
            </summary>
        </member>
        <member name="F:DXYK.Admin.API.Filters.GlobalExceptionFilter.env">
            <summary>
            IHostingEnvironment
            </summary>
        </member>
        <member name="F:DXYK.Admin.API.Filters.GlobalExceptionFilter.logger">
            <summary>
            ILogger
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Filters.GlobalExceptionFilter.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Logging.ILogger{DXYK.Admin.API.Filters.GlobalExceptionFilter})">
            <summary>
            GlobalExceptionFilter
            </summary>
            <param name="env"></param>
            <param name="logger"></param>
        </member>
        <member name="M:DXYK.Admin.API.Filters.GlobalExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            OnException
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:DXYK.Admin.API.Filters.GlobalValidateModelFilter">
            <summary>
            GlobalValidateModelFilter
            </summary>
        </member>
        <member name="F:DXYK.Admin.API.Filters.GlobalValidateModelFilter._env">
            <summary>
            IHostingEnvironment
            </summary>
        </member>
        <member name="F:DXYK.Admin.API.Filters.GlobalValidateModelFilter._logger">
            <summary>
            ILogger
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Filters.GlobalValidateModelFilter.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Logging.ILogger{DXYK.Admin.API.Filters.GlobalValidateModelFilter})">
            <summary>
            GlobalValidateModelFilter
            </summary>
            <param name="env"></param>
            <param name="logger"></param>
        </member>
        <member name="M:DXYK.Admin.API.Filters.GlobalValidateModelFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            OnActionExecuted
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DXYK.Admin.API.Filters.GlobalValidateModelFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            OnActionExecuting
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:DXYK.Admin.API.Messages.QueryByPageResponse`1">
            <summary>
            QueryByPageResponse
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:DXYK.Admin.API.Messages.QueryByPageResponse`1.count">
            <summary>
            总数
            </summary>
        </member>
        <member name="T:DXYK.Admin.API.Messages.QueryRequest">
            <summary>
            查询请求
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.QueryRequest.limit">
            <summary>
            单页行数
            </summary>
        </member>
        <member name="T:DXYK.Admin.API.Messages.QueryByPageRequest">
            <summary>
            分页查询请求
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.QueryByPageRequest.keyWords">
            <summary>
            查询关键字
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.QueryByPageRequest.page">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.QueryByPageRequest.offset">
            <summary>
            忽略
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.QueryByPageRequest.field">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.QueryByPageRequest.order">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.QueryByPageRequest.OrderBy">
            <summary>
            拼接排序sortField + order (如： id Asc)
            </summary>
        </member>
        <member name="T:DXYK.Admin.API.Messages.QueryByPageWithParamRequest">
            <summary>
            分页查询请求带查询参数
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.QueryByPageWithParamRequest.startTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.QueryByPageWithParamRequest.endTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="T:DXYK.Admin.API.Messages.QueryResponse`1">
            <summary>
            QueryResponse
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:DXYK.Admin.API.Messages.QueryResponse`1.data">
            <summary>
            数据行
            </summary>
        </member>
        <member name="T:DXYK.Admin.API.Messages.ResponseMessage`1">
            <summary>
            ResponseMessage 返回消息
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.ResponseMessage`1.success">
            <summary>
            是否成功返回，true 返回成功  false 返回失败，默认为true
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.ResponseMessage`1.code">
            <summary>
            数据返回状态 0 为成功
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.ResponseMessage`1.status">
            <summary>
            响应状态  500：访问出错了
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.ResponseMessage`1.msg">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.ResponseMessage`1.data">
            <summary>
            返回主体
            </summary>
        </member>
        <member name="T:DXYK.Admin.API.Messages.ResponseMessageWrap`1">
            <summary>
            ResponseMessageWrap 返回消息
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.ResponseMessageWrap`1.success">
            <summary>
            是否成功返回，true 返回成功  false 返回失败，默认为true
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.ResponseMessageWrap`1.code">
            <summary>
            数据返回状态 0 为成功
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.ResponseMessageWrap`1.status">
            <summary>
            响应状态
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.ResponseMessageWrap`1.msg">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.ResponseMessageWrap`1.count">
            <summary>
            消息
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Messages.ResponseMessageWrap`1.data">
            <summary>
            返回主体
            </summary>
        </member>
        <member name="T:DXYK.Admin.API.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Program.Main(System.String[])">
            <summary>
            Main函数
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:DXYK.Admin.API.Program.BuildWebHost(System.String[])">
            <summary>
            BuildWebHost
            </summary>
            <param name="args">args</param>
            <returns></returns>
        </member>
        <member name="T:DXYK.Admin.API.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="F:DXYK.Admin.API.Startup.SERVICE_NAME">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Startup.Configuration">
            <summary>
            Configuration 应用配置
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Startup程序启动
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:DXYK.Admin.API.Startup.RegisterRepository(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Repository仓储注册
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Startup.RegisterService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Service服务注册
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Startup.RegisterSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Swagger注册
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Configure配置
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Startup.ConfigureSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Swagger配置
            </summary>
        </member>
        <member name="T:DXYK.Admin.API.Utils.CaptchaHelper">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Utils.CaptchaHelper.Letters">
            <summary>
            Letters
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Utils.CaptchaHelper.CodeLength">
            <summary>
            CodeLength
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Utils.CaptchaHelper.GenerateCaptchaCode">
            <summary>
            生成验证码
            </summary>
            <returns></returns>
        </member>
        <member name="M:DXYK.Admin.API.Utils.CaptchaHelper.GetImage(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            获取图片
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="captchaCode"></param>
            <param name="drawBezier"></param>
            <returns></returns>
        </member>
        <member name="T:DXYK.Admin.API.Utils.CaptchaResult">
            <summary>
            CaptchaResult
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Utils.CaptchaResult.CaptchaCode">
            <summary>
            CaptchaCode
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Utils.CaptchaResult.CaptchaByteData">
            <summary>
            CaptchaByteData
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Utils.CaptchaResult.CaptchBase64Data">
            <summary>
            CaptchBase64Data
            </summary>
        </member>
        <member name="P:DXYK.Admin.API.Utils.CaptchaResult.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:DXYK.Admin.API.Utils.CommmonUtils">
            <summary>
            CommmonUtils工具集合
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Utils.CommmonUtils.EntityToEntity(System.Object,System.Object,System.String[])">
            <summary>
            将一个实体类复制到另一个实体类
            </summary>
            <param name="objSrc">源实体类</param>
            <param name="objDesc">复制到的实体类</param>
            <param name="ignoreFields">不复制的属性</param>
        </member>
        <member name="T:DXYK.Admin.API.Utils.JsonLongConverter">
            <summary>
            long 类型转为string
            解决前端加载数据long类型精度丢失的问题
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Utils.JsonLongConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            ReadJson
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Utils.JsonLongConverter.CanConvert(System.Type)">
            <summary>
            CanConvert
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Utils.JsonLongConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            WriteJson
            </summary>
        </member>
        <member name="T:DXYK.Admin.API.Utils.GetCurrentUser">
            <summary>
            
            </summary>
        </member>
        <member name="M:DXYK.Admin.API.Utils.GetCurrentUser.GetUser(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取当前用户信息
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
